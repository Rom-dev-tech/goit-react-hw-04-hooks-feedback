{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/Title/Title.module.scss","components/Button/Button.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","UI/Container/Container.module.scss","UI/Section/Section.module.scss","UI/Container/Container.jsx","components/Title/Title.jsx","UI/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Title","title","titleSize","subTitleWraper","join","Section","section","Statistics","good","neutral","bad","total","positivePercentage","statsLabel","statsList","Object","keys","map","label","statsItem","stats","propType","PropTypes","number","isRequired","Button","onLeaveFeedback","button","type","onClick","FeedbackOptions","options","list","index","buttonItem","Notification","message","App","state","props","goodInitialValue","neutraInitiallValue","badInitialValue","value","setState","prevState","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,0BAA0B,UAAY,8BAA8B,UAAY,gC,iBCA5ID,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,MAAQ,qBAAqB,QAAU,uBAAuB,GAAK,kBAAkB,GAAK,kBAAkB,GAAK,oB,kBCAlLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,0CAA0C,QAAU,6CAA6C,IAAM,2C,gBCAhKD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,WAAa,sC,oBCApED,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,iLCUbC,EARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCaxBI,EAdD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACtB,OACE,sBAAKL,UAAWC,IAAEK,eAAlB,UACE,oBAAIN,UAAW,CAACC,IAAEG,MAAOH,IAAEI,IAAYE,KAAK,KAA5C,SAAmDH,IACnD,oBAAIJ,UAAW,CAACC,IAAEG,MAAOH,IAAEI,IAAYE,KAAK,KAA5C,SAAmDH,Q,iBCe1CI,EAjBC,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAWN,EAAe,EAAfA,SACnC,OACE,yBAASC,UAAWC,IAAEQ,QAAtB,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOL,MAAOA,EAAOC,UAAWA,IAC/BN,Q,gCCPHW,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAa,CAAEL,OAAMC,UAASC,OAEpC,OACE,mCACE,qBAAIb,UAAWC,IAAEgB,UAAjB,UACGC,OAAOC,KAAKH,GAAYI,KAAI,SAAAC,GAAK,OAChC,oBAAIrB,UAAWC,IAAEqB,UAAjB,SACE,oBAAGtB,UAAWC,IAAEsB,MAAhB,UACGF,EADH,KACW,+BAAOL,EAAWK,SAFEA,MAOnC,oBAAIrB,UAAWC,IAAEqB,UAAjB,SACE,oBAAGtB,UAAW,CAACC,IAAEsB,MAAOtB,IAAEa,OAAOP,KAAK,KAAtC,oBACS,+BAAOO,SAIlB,oBAAId,UAAWC,IAAEqB,UAAjB,SACE,oBAAGtB,UAAW,CAACC,IAAEsB,MAAOtB,IAAEa,OAAOP,KAAK,KAAtC,+BAEE,iCAAOQ,EAAP,kBAQZL,EAAWc,SAAW,CACpBb,KAAMc,IAAUC,OAAOC,WACvBf,QAASa,IAAUC,OAAOC,WAC1Bd,IAAKY,IAAUC,OAAOC,WACtBb,MAAOW,IAAUC,OAAOC,WACxBZ,mBAAoBU,IAAUC,OAAOC,YAGxBjB,Q,gBCtBAkB,EAjBA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,gBAAiBb,EAAiB,EAAjBA,WACjC,OACE,wBACEhB,UAAW,CAACC,IAAE6B,OAAQ7B,IAAEe,IAAaT,KAAK,KAC1CwB,KAAK,SACLC,QAAS,kBAAMH,EAAgBb,IAHjC,SAKE,+BAAOA,O,gBCaEiB,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OACE,mCACE,oBAAI7B,UAAWC,IAAEkC,KAAjB,SACGD,EAAQd,KAAI,SAACG,EAAOa,GAAR,OACX,oBAAIpC,UAAWC,IAAEoC,WAAjB,SACE,cAAC,EAAD,CAAQR,gBAAiBA,EAAiBb,WAAYO,KADtB,CAACA,EAAOa,GAAO7B,KAAK,cCEjD+B,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAAC,EAAD,CAAOnC,MAAOmC,EAASlC,UAAU,QCEpCmC,E,4MAOJC,MAAQ,CACN9B,KAAM,EAAK+B,MAAMC,iBACjB/B,QAAS,EAAK8B,MAAME,oBACpB/B,IAAK,EAAK6B,MAAMG,iB,EAclBhB,gBAAkB,SAAAiB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,wDAbhC,WACE,OAAOG,KAAKR,MAAM9B,KAAOsC,KAAKR,MAAM7B,QAAUqC,KAAKR,MAAM5B,M,6CAG3D,WACE,OAAkC,IAA9BoC,KAAKC,qBACA,EAEFC,KAAKC,MAAOH,KAAKR,MAAM9B,KAAOsC,KAAKC,qBAAwB,O,oBASpE,WACE,IAAMlC,EAAaE,OAAOC,KAAK8B,KAAKR,OAC9BZ,EAAkBoB,KAAKpB,gBAC7B,EAA+BoB,KAAKR,MAA5B9B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQmC,KAAKC,qBACbnC,EAAqBkC,KAAKI,kCAChC,OACE,qCACE,cAAC,EAAD,CAASjD,MAAM,wBAAwBC,UAAU,KAAjD,SACE,cAAC,EAAD,CACE6B,QAASlB,EACTa,gBAAiBA,MAIrB,cAAC,EAAD,CAASzB,MAAM,aAAaC,UAAU,KAAtC,SACGS,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcwB,QAAQ,kC,GAvDhBe,aAAZd,EACGe,aAAe,CACpBZ,iBAAkB,EAClBC,oBAAqB,EACrBC,gBAAiB,GA2DNL,QC/DfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7bbef7ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__2iSlr\",\"total\":\"Statistics_total__3_5hf\",\"statsList\":\"Statistics_statsList__2T4wN\",\"statsItem\":\"Statistics_statsItem__1k8oU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitleWraper\":\"Title_subTitleWraper__gZjKK\",\"title\":\"Title_title__10qoG\",\"animate\":\"Title_animate__1QLsT\",\"h1\":\"Title_h1__1EjGK\",\"h2\":\"Title_h2__2izh7\",\"h3\":\"Title_h3__1UTG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2l6Qy\",\"good\":\"Button_good__1qyc5 Button_button__2l6Qy\",\"neutral\":\"Button_neutral__1-SOb Button_button__2l6Qy\",\"bad\":\"Button_bad__ICcWo Button_button__2l6Qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2IYtq\",\"buttonItem\":\"FeedbackOptions_buttonItem__3J-CN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1z3qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2xqpK\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from '../Title/Title.module.scss';\n\nconst Title = ({ title, titleSize }) => {\n  return (\n    <div className={s.subTitleWraper}>\n      <h2 className={[s.title, s[titleSize]].join(' ')}>{title}</h2>\n      <h2 className={[s.title, s[titleSize]].join(' ')}>{title}</h2>\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  titleSize: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport Container from '../../UI/Container';\nimport Title from '../../components/Title';\nimport s from '../Section/Section.module.scss';\n\nconst Section = ({ title, titleSize, children }) => {\n  return (\n    <section className={s.section}>\n      <Container>\n        <Title title={title} titleSize={titleSize} />\n        {children}\n      </Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  titleSize: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from '../Statistics/Statistics.module.scss';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const statsLabel = { good, neutral, bad };\n\n  return (\n    <>\n      <ul className={s.statsList}>\n        {Object.keys(statsLabel).map(label => (\n          <li className={s.statsItem} key={label}>\n            <p className={s.stats}>\n              {label}: <span>{statsLabel[label]}</span>\n            </p>\n          </li>\n        ))}\n\n        <li className={s.statsItem}>\n          <p className={[s.stats, s.total].join(' ')}>\n            Total: <span>{total}</span>\n          </p>\n        </li>\n\n        <li className={s.statsItem}>\n          <p className={[s.stats, s.total].join(' ')}>\n            Positive feedback:\n            <span>{positivePercentage}%</span>\n          </p>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propType = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from '../Button/Button.module.scss';\n\nconst Button = ({ onLeaveFeedback, statsLabel }) => {\n  return (\n    <button\n      className={[s.button, s[statsLabel]].join(' ')}\n      type=\"button\"\n      onClick={() => onLeaveFeedback(statsLabel)}\n    >\n      <span>{statsLabel}</span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  statsLabel: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from '../Button';\nimport s from '../FeedbackOptions/FeedbackOptions.module.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {options.map((stats, index) => (\n          <li className={s.buttonItem} key={[stats, index].join(' ')}>\n            <Button onLeaveFeedback={onLeaveFeedback} statsLabel={stats} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FeedbackOptions;\n","import Title from '../Title';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <Title title={message} titleSize=\"h3\" />;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from '../../UI/Section';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    goodInitialValue: 0,\n    neutraInitiallValue: 0,\n    badInitialValue: 0,\n  };\n\n  state = {\n    good: this.props.goodInitialValue,\n    neutral: this.props.neutraInitiallValue,\n    bad: this.props.badInitialValue,\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    if (this.countTotalFeedback() === 0) {\n      return 0;\n    }\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  onLeaveFeedback = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  render() {\n    const statsLabel = Object.keys(this.state);\n    const onLeaveFeedback = this.onLeaveFeedback;\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedBack\" titleSize=\"h1\">\n          <FeedbackOptions\n            options={statsLabel}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\" titleSize=\"h2\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given...\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}