{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/Title/Title.module.scss","components/Button/Button.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","UI/Container/Container.module.scss","UI/Section/Section.module.scss","UI/Container/Container.jsx","UI/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Title/Title.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Section","section","Statistics","good","neutral","bad","total","positivePercentage","statsLabel","statsList","Object","keys","map","label","statsItem","stats","join","propType","PropTypes","number","isRequired","Button","onLeaveFeedback","button","type","onClick","FeedbackOptions","options","list","index","buttonItem","Title","title","titleSize","subTitleWraper","Notification","message","App","goodInitialValue","neutraInitiallValue","badInitialValue","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","value","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93123b33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__3mL4t\",\"total\":\"Statistics_total__1wap9\",\"statsList\":\"Statistics_statsList__3tamX\",\"statsItem\":\"Statistics_statsItem__ynBp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitleWraper\":\"Title_subTitleWraper__2ae4f\",\"title\":\"Title_title__1jPs1\",\"animate\":\"Title_animate__d7OnD\",\"h1\":\"Title_h1__1pdQO\",\"h2\":\"Title_h2__3MZ-K\",\"h3\":\"Title_h3__18bjX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\",\"good\":\"Button_good__gRi6d Button_button__2Lf63\",\"neutral\":\"Button_neutral__2RQQQ Button_button__2Lf63\",\"bad\":\"Button_bad__2kQlE Button_button__2Lf63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3-Kfe\",\"buttonItem\":\"FeedbackOptions_buttonItem__279UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2A_zd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__15Hrk\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport Container from '../../UI/Container';\nimport s from '../Section/Section.module.scss';\n\nconst Section = ({ children }) => {\n  return (\n    <section className={s.section}>\n      <Container>{children}</Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from '../Statistics/Statistics.module.scss';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const statsLabel = { good, neutral, bad };\n\n  return (\n    <>\n      <ul className={s.statsList}>\n        {Object.keys(statsLabel).map(label => (\n          <li className={s.statsItem} key={label}>\n            <p className={s.stats}>\n              {label}: <span>{statsLabel[label]}</span>\n            </p>\n          </li>\n        ))}\n\n        <li className={s.statsItem}>\n          <p className={[s.stats, s.total].join(' ')}>\n            Total: <span>{total}</span>\n          </p>\n        </li>\n\n        <li className={s.statsItem}>\n          <p className={[s.stats, s.total].join(' ')}>\n            Positive feedback:\n            <span>{positivePercentage}%</span>\n          </p>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propType = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from '../Button/Button.module.scss';\n\nconst Button = ({ onLeaveFeedback, statsLabel }) => {\n  return (\n    <button\n      className={[s.button, s[statsLabel]].join(' ')}\n      type=\"button\"\n      onClick={() => onLeaveFeedback(statsLabel)}\n    >\n      <span>{statsLabel}</span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  statsLabel: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from '../Button';\nimport s from '../FeedbackOptions/FeedbackOptions.module.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {options.map((stats, index) => (\n          <li className={s.buttonItem} key={[stats, index].join(' ')}>\n            <Button onLeaveFeedback={onLeaveFeedback} statsLabel={stats} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from '../Title/Title.module.scss';\n\nconst Title = ({ title, titleSize }) => {\n  return (\n    <div className={s.subTitleWraper}>\n      <h2 className={[s.title, s[titleSize]].join(' ')}>{title}</h2>\n      <h2 className={[s.title, s[titleSize]].join(' ')}>{title}</h2>\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  titleSize: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import Title from '../Title';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <Title title={message} titleSize=\"h3\" />;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Section from '../../UI/Section';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\nimport Title from '../Title';\n\nconst App = ({\n  goodInitialValue = 0,\n  neutraInitiallValue = 0,\n  badInitialValue = 0,\n}) => {\n  const [good, setGood] = useState(goodInitialValue);\n  const [neutral, setNeutral] = useState(neutraInitiallValue);\n  const [bad, setBad] = useState(badInitialValue);\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    if (countTotalFeedback() === 0) {\n      return 0;\n    }\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  const onLeaveFeedback = value => {\n    switch (value) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const statsLabelArray = ['good', 'neutral', 'bad'];\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n  return (\n    <>\n      <Section>\n        <Title title=\"Please leave feedBack\" titleSize=\"h1\" />\n        <FeedbackOptions\n          options={statsLabelArray}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n\n        <Title title=\"Statistics\" titleSize=\"h2\" />\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given...\" />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}